using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;

public class EnemyAI : MonoBehaviour
{
	private Animator anim;
	private NavMeshAgent agent;
	public GameObject player;

	public GameObject bullet;
	public float bulletSpawn;

	public float lifetime = 3;
	


	public float AttackDistance = 10.0f;
	public float FollowDistance = 20.0f;

	[Range(0.0f, 1.0f)]
	public float AttackProbability = 0.5f;

	[Range(0.0f, 1.0f)]
	public float HitAccuracy = 0.5f;

	public float DamagePoints = 2.0f;

	public Transform[] patrolPoints;
	private int currentControlPointIndex = 0;

	void Awake()
	{
		agent = GetComponent<NavMeshAgent>();
		anim = GetComponent<Animator>();
		//MoveToNextPatrolPoint();
	}

	void Update()
	{
		if (agent.enabled)
		{
			float dist = Vector3.Distance(player.transform.position, this.transform.position);
			bool shoot = false;
			bool patrol = false;
			bool follow = (dist < FollowDistance);

			if (follow)
			{
				float random = Random.Range(0.0f, 1.0f);
				if (random > (1.0f - AttackProbability) && dist < AttackDistance)
				{
					shoot = true;
				}
				agent.SetDestination(player.transform.position);
			}

			patrol = !follow && !shoot && patrolPoints.Length > 0;

			if (!follow || shoot && !patrol)
			{
				agent.SetDestination(transform.position);
			}

			if(patrol)
			{
				if(!agent.pathPending && agent.remainingDistance < 0.5f)
				{
					MoveToNextPatrolPoint();
				}
			}

			anim.SetBool("Shoot", shoot);
			anim.SetBool("Run", follow || patrol);
			
		}
	}

	void MoveToNextPatrolPoint()
	{
		if(patrolPoints.Length > 0)
		{
			agent.destination = patrolPoints[currentControlPointIndex].position;
			currentControlPointIndex++;
			currentControlPointIndex %= patrolPoints.Length;
		}
	}
	public void ShootEvent()
	{
		float random = Random.Range(0.0f, 1.0f);
		bool isHit = random > 1.0f - HitAccuracy;

		if (isHit)
		{
			player.SendMessage("Damage", DamagePoints, SendMessageOptions.DontRequireReceiver);
		}

	}

}
